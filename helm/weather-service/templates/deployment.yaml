apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "weather-service.fullname" . }}
  labels:
    {{- include "weather-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "weather-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "weather-service.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: WEATHER_API_KEY
              value: {{ .Values.env.WEATHER_API_KEY | quote }}
            - name: DEFAULT_LOCATION
              value: {{ .Values.env.DEFAULT_LOCATION | quote }}
            - name: TEMP_UNIT
              value: {{ .Values.env.TEMP_UNIT | quote }}
            - name: NODE_ENV
              value: {{ .Values.env.NODE_ENV | quote }}
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /app/data
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "weather-service.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}

